/*
 * Copyright (c) 2014 Pwootage
 *
 * This file is part of SASM.
 *
 * SASM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SASM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with SASM.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.pwootage.sasm.java.classFile

/**
 * Constants used in java class files
 *
 * @author Pwootage
 */
object JavaClassDefinitionConstants {
  /** Declared public; may be accessed from outside its package. */
  val ACC_PUBLIC: Short = 0x0001

  /** Declared private; usable only within the defining class. */
  val ACC_PRIVATE: Short = 0x0002

  /** Declared protected; may be accessed within subclasses. */
  val ACC_PROTECTED: Short = 0x0004

  /** Declared static. */
  val ACC_STATIC: Short = 0x0008

  /** Declared final; no subclasses allowed; must not be overridden. */
  val ACC_FINAL: Short = 0x0010

  /** Treat superclass methods specially when invoked by the invokespecial instruction. */
  val ACC_SUPER: Short = 0x0020

  /** Declared synchronized; invocation is wrapped by a monitor use. */
  val ACC_SYNCHRONIZED: Short = 0x0020

  /** Declared volatile; cannot be cached. */
  val ACC_VOLATILE: Short = 0x0040

  /** A bridge method, generated by the compiler. */
  val ACC_BRIDGE: Short = 0x0040

  /** Declared transient; not written or read by a persistent object manager. */
  val ACC_TRANSIENT: Short = 0x0080

  /** Declared with variable number of arguments. */
  val ACC_VARARGS = 0x0080

  /** Declared native; implemented in a language other than Java. */
  val ACC_NATIVE = 0x0100

  /** Is an interface, not a class. */
  val ACC_INTERFACE: Short = 0x0200

  /** Declared abstract; must not be instantiated; no implementation is provided. */
  val ACC_ABSTRACT: Short = 0x0400

  /** Declared strictfp; floating-point mode is FP-strict. */
  val ACC_STRICT: Short = 0x0800

  /** Declared synthetic; not present in the source code. */
  val ACC_SYNTHETIC: Short = 0x1000

  /** Declared as an annotation type. */
  val ACC_ANNOTATION: Short = 0x2000

  /** Declared as an enum type. */
  val ACC_ENUM: Short = 0x4000

}
